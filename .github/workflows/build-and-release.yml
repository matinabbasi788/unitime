name: Build and Release UniTime with Ant

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        path: unitime

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install Ant
      run: |
        sudo apt-get update
        sudo apt-get install -y ant

    - name: Build CPSolver with Ant (if exists)
      run: |
        cd unitime
        if [ -d "CPSolver" ]; then
          cd CPSolver
          ant
          cd ..
        else
          echo "CPSolver directory not found, skipping CPSolver build."
        fi

    - name: Build UniTime with Ant
      run: |
        cd unitime
        ant

    - name: Zip Build Artifacts
      run: |
        cd unitime
        # فرض می‌کنیم فایل‌های بیلد توی پوشه dist یا build هستن
        if [ -d "dist" ]; then
          zip -r unitime-build.zip dist
        elif [ -d "build" ]; then
          zip -r unitime-build.zip build
        elif [ -f "unitime.war" ]; then
          zip -r unitime-build.zip unitime.war
        else
          echo "No build artifacts found in dist, build, or unitime.war"
          exit 1
        fi
        mv unitime-build.zip ..

    - name: Create GitHub Release
      uses: actions/create-release@v1
      if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')  # فقط برای push به main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: UniTime Build ${{ github.run_number }}
        draft: false
        prerelease: false
        body: |
          Automated build of UniTime from commit ${{ github.sha }}.
          Contains the build artifacts in unitime-build.zip.

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: unitime-build.zip
        asset_name: unitime-build.zip
        asset_content_type: application/zip

    - name: Debug on Failure
      if: failure()
      run: |
        cd unitime
        ant -debug -verbose
